/*!
 * \file      rfm96w-board.h
 *
 * \brief     Target board RFM96W driver implementation.
 *            Highly derived from SX1276 driver
 *
 * \copyright Revised BSD License, see section \ref LICENSE.
 *
 * \author    Diego Bienz
 *
 * \author    (sx1276-board.h) Miguel Luis ( Semtech )
 *
 * \author    (sx1276-board.h) Gregory Cristian ( Semtech )
 */
#ifndef __RFM96W_BOARD_H__
#define __RFM96W_BOARD_H__

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdint.h>
#include <stdbool.h>
#include "rfm96w/rfm96w.h"

/*!
 * \brief Radio hardware registers initialization definition
 *
 * \remark Can be automatically generated by the RFM96W GUI (not yet implemented)
 */
#define RADIO_INIT_REGISTERS_VALUE                   \
  {                                                  \
    {MODEM_LORA, REG_LNA, 0x23},                     \
        {MODEM_LORA, REG_RXCONFIG, 0x1E},            \
        {MODEM_LORA, REG_RSSICONFIG, 0xD2},          \
        {MODEM_LORA, REG_AFCFEI, 0x01},              \
        {MODEM_LORA, REG_PREAMBLEDETECT, 0xAA},      \
        {MODEM_LORA, REG_OSC, 0x07},                 \
        {MODEM_LORA, REG_SYNCCONFIG, 0x12},          \
        {MODEM_LORA, REG_SYNCVALUE1, 0xC1},          \
        {MODEM_LORA, REG_SYNCVALUE2, 0x94},          \
        {MODEM_LORA, REG_SYNCVALUE3, 0xC1},          \
        {MODEM_LORA, REG_PACKETCONFIG1, 0xD8},       \
        {MODEM_LORA, REG_FIFOTHRESH, 0x8F},          \
        {MODEM_LORA, REG_IMAGECAL, 0x02},            \
        {MODEM_LORA, REG_DIOMAPPING1, 0x40},         \
        {MODEM_LORA, REG_DIOMAPPING2, 0x30},         \
        {MODEM_LORA, REG_LR_PAYLOADMAXLENGTH, 0x40}, \
  }

#define RF_MID_BAND_THRESH 525000000

  /*!
 * \brief Initializes the radio I/Os pins interface
 */
  void RFM96WIoInit(void);

  /*!
 * \brief Initializes DIO IRQ handlers
 *
 * \param [IN] irqHandlers Array containing the IRQ callback functions
 */
  void RFM96WIoIrqInit(DioIrqHandler **irqHandlers);

  /*!
 * \brief De-initializes the radio I/Os pins interface.
 *
 * \remark Useful when going in MCU low power modes
 */
  void RFM96WIoDeInit(void);

  /*!
 * \brief Initializes the TCXO power pin.
 */
  void RFM96WIoTcxoInit(void);

  /*!
 * \brief Resets the radio
 */
  void RFM96WReset(void);

  /*!
 * \brief Sets the radio output power.
 *
 * \param [IN] power Sets the RF output power
 */
  void RFM96WSetRfTxPower(int8_t power);

  /*!
 * \brief Checks if the given RF frequency is supported by the hardware
 *
 * \param [IN] frequency RF frequency to be checked
 * \retval isSupported [true: supported, false: unsupported]
 */
  bool RFM96WCheckRfFrequency(uint32_t frequency);

  /*!
 * \brief Enables/disables the TCXO if available on board design.
 *
 * \param [IN] state TCXO enabled when true and disabled when false.
 */
  void RFM96WSetBoardTcxo(uint8_t state);

  /*!
 * \brief Gets the Defines the time required for the TCXO to wakeup [ms].
 *
 * \retval time Board TCXO wakeup time in ms.
 */
  uint32_t RFM96WGetBoardTcxoWakeupTime(void);

  /*!
 * Radio hardware and global parameters
 */
  extern RFM96W_t RFM96W;

#ifdef __cplusplus
}
#endif

#endif // __RFM96W_BOARD_H__
